---
import Container from '@components/common/Container.astro';
import { getLocaleData } from '@lib/i18n';
import type { Locale } from '@lib/i18n';

export interface Props {
  locale: Locale;
}

const { locale } = Astro.props;

const processSteps = [
  {
    number: '01',
    title: 'Diagnostic gratuit',
    description: 'Analyse approfondie de vos processus pour identifier les opportunités d\'automatisation immédiates',
    iconPath: 'M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4',
    color: 'primary',
  },
  {
    number: '02',
    title: 'Sprint de 2 semaines',
    description: 'Développement et déploiement rapide de vos premiers agents IA opérationnels',
    iconPath: 'M13 10V3L4 14h7v7l9-11h-7z',
    color: 'secondary',
  },
  {
    number: '03',
    title: 'Mesure ROI',
    description: 'Tableau de bord en temps réel et optimisation continue de vos agents',
    iconPath: 'M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z',
    color: 'accent',
  },
  {
    number: '04',
    title: 'Support mensuel',
    description: 'Accompagnement continu et évolution de vos automatisations',
    iconPath: 'M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z',
    color: 'accent-purple',
  },
];
---

<section class="section bg-gradient-to-b from-gray-50 via-white to-primary/5">
  <Container>
    <div class="text-center mb-16 scroll-fade visible">
      <h2 class="font-display font-bold text-dark mb-4">
        <span class="text-4xl text-primary">■</span> Processus simplifié
      </h2>
    </div>
    
    <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
      {processSteps.map((step, index) => (
        <div class="scroll-fade" style={`animation-delay: ${index * 100}ms`}>
          <div class="relative h-full bg-white rounded-2xl p-8 shadow-sm hover:shadow-xl transition-all duration-300 hover:-translate-y-1">
            <!-- Number badge -->
            <div class={`
              absolute -top-4 -left-4 w-14 h-14 rounded-2xl flex items-center justify-center font-display font-bold text-xl text-white
              ${step.color === 'primary' ? 'bg-primary' : 
                step.color === 'secondary' ? 'bg-secondary' : 
                step.color === 'accent' ? 'bg-accent' :
                'bg-accent-purple'}
            `}>
              {step.number}
            </div>
            
            <!-- Icon -->
            <div class="mb-6 pt-6">
              <svg 
                class={`w-12 h-12 ${
                  step.color === 'primary' ? 'text-primary' : 
                  step.color === 'secondary' ? 'text-secondary' : 
                  step.color === 'accent' ? 'text-accent' :
                  'text-accent-purple'
                }`} 
                fill="none" 
                viewBox="0 0 24 24" 
                stroke="currentColor"
                stroke-width="1.5"
              >
                <path stroke-linecap="round" stroke-linejoin="round" d={step.iconPath} />
              </svg>
            </div>
            
            <!-- Content -->
            <h3 class="text-xl font-display font-semibold text-dark mb-3">
              {step.title}
            </h3>
            <p class="text-gray-600 leading-relaxed">
              {step.description}
            </p>
            
            <!-- Arrow (except for last item) -->
            {index < processSteps.length - 1 && (
              <div class="hidden lg:block absolute top-1/2 -right-4 transform -translate-y-1/2">
                <svg class="w-8 h-8 text-gray-300" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                </svg>
              </div>
            )}
          </div>
        </div>
      ))}
    </div>
  </Container>
</section>