---
import Container from '../common/Container.astro';
import Button from '../common/Button.astro';
---

<section class="relative min-h-screen flex items-center bg-white overflow-hidden">
  <!-- Background decoration -->
  <div class="absolute inset-0 bg-gradient-to-br from-primary/5 via-white to-accent/5"></div>
  
  <!-- Animated background pattern -->
  <div class="absolute inset-0 opacity-[0.02]">
    <div class="absolute inset-0" style="background-image: url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%235B8BFF" fill-opacity="1"%3E%3Cpath d="M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E'); background-size: 60px 60px;"></div>
  </div>
  
  <Container>
    <div class="relative z-10 grid lg:grid-cols-2 gap-12 lg:gap-20 items-center">
      <!-- Left Column - Content -->
      <div class="space-y-8">
        <div class="space-y-6 animate-stagger">
          <h1 class="font-display font-bold text-dark leading-tight text-5xl md:text-6xl lg:text-7xl xl:text-8xl">
            <span class="block text-transparent bg-clip-text bg-gradient-to-r from-secondary to-accent">
              Automatisez 30%
            </span>
            <span class="block">de vos tâches</span>
            <span class="block">en 30 jours</span>
          </h1>
          
          <p class="text-xl text-gray-700 max-w-xl">
            Vecia déploie des agents IA qui se branchent sur vos outils, 
            exécutent les tâches répétitives et rendent vos équipes 
            + productives dès le premier mois.
          </p>
        </div>
        
        <div class="flex flex-col sm:flex-row gap-4 mt-24">
          <Button href="https://calendly.com/alexandre-fedotov-gennadievitch/30min" variant="primary" size="large">
            <span class="px-4">Découvrir notre approche</span>
          </Button>
        </div>
      </div>
      
      <!-- Right Column - Process Flow Visualization -->
      <div class="relative lg:h-[600px] flex items-center justify-center">
        <div class="w-full max-w-2xl">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-3 items-center relative">
            <!-- Sources Card -->
            <div class="process-card group animate-fade-in">
              <div class="relative z-10 bg-gradient-to-br from-purple-400 to-purple-600 rounded-2xl p-6 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:scale-105">
                <div class="flex flex-col items-center text-white">
                  <!-- Database Icon -->
                  <svg class="w-12 h-12 mb-3" fill="currentColor" viewBox="0 0 24 24">
                    <ellipse cx="12" cy="7" rx="8" ry="3" />
                    <path d="M4 7v10c0 1.66 3.58 3 8 3s8-1.34 8-3V7" />
                    <path d="M4 12c0 1.66 3.58 3 8 3s8-1.34 8-3" />
                  </svg>
                  <h3 class="text-lg font-bold font-display text-white">Sources</h3>
                </div>
              </div>
              <!-- Connector Arrow -->
              <div class="hidden md:block absolute top-1/2 -right-2 transform -translate-y-1/2 z-20">
                <svg class="w-10 h-10" viewBox="0 0 64 64" fill="none">
              <path d="M8 32 Q32 16 56 32" stroke="url(#gradient1)" stroke-width="4" fill="none"/>
              <defs>
                <linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="0%">
                  <stop offset="0%" style="stop-color:#9333ea;stop-opacity:1" />
                  <stop offset="100%" style="stop-color:#3b82f6;stop-opacity:1" />
                </linearGradient>
              </defs>
            </svg>
          </div>
        </div>

            <!-- Agent IA Card -->
            <div class="process-card group animate-fade-in" style="animation-delay: 200ms">
              <div class="relative z-10 bg-gradient-to-br from-blue-500 to-blue-700 rounded-2xl p-6 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:scale-105">
                <div class="flex flex-col items-center text-white">
                  <!-- Gear with Code Icon -->
                  <div class="relative w-12 h-12 mb-3">
                    <svg class="w-full h-full" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M12 15.5A3.5 3.5 0 0 1 8.5 12A3.5 3.5 0 0 1 12 8.5a3.5 3.5 0 0 1 3.5 3.5a3.5 3.5 0 0 1-3.5 3.5m7.43-2.53c-.04.32-.07.64-.07.97c0 .33.03.66.07 1l-2.11 1.63c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.31.61.22l2.49-1c.52.39 1.06.73 1.69.98l.37 2.65A.506.506 0 0 0 14.86 21h4c.25 0 .46-.18.5-.42l.37-2.65c.63-.25 1.17-.59 1.69-.98l2.49 1c.22.09.49 0 .61-.22l2-3.46c.13-.22.07-.49-.12-.64L19.81 16c.04-.34.07-.67.07-1c0-.33-.03-.65-.07-.97l2.11-1.66c.19-.15.25-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1.01c-.52-.4-1.06-.74-1.69-.99l-.37-2.65A.506.506 0 0 0 14.86 5h-4c-.25 0-.46.18-.5.42l-.37 2.65c-.63.26-1.17.59-1.69.99l-2.49-1.01c-.22-.08-.49 0-.61.22l-2 3.46c-.12.22-.07.49.12.64l2.11 1.66c-.04.32-.07.64-.07.97c0 .33.03.65.07.97" />
                      <text x="12" y="16" text-anchor="middle" font-size="8" fill="white" font-family="monospace" font-weight="bold">&lt;/&gt;</text>
                    </svg>
                  </div>
                  <h3 class="text-lg font-bold font-display text-white">Agent IA</h3>
                </div>
              </div>
              <!-- Connector Arrow -->
              <div class="hidden md:block absolute top-1/2 -right-2 transform -translate-y-1/2 z-20">
                <svg class="w-10 h-10" viewBox="0 0 64 64" fill="none">
              <path d="M8 32 Q32 16 56 32" stroke="url(#gradient2)" stroke-width="4" fill="none"/>
              <defs>
                <linearGradient id="gradient2" x1="0%" y1="0%" x2="100%" y2="0%">
                  <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:1" />
                  <stop offset="100%" style="stop-color:#38bdf8;stop-opacity:1" />
                </linearGradient>
              </defs>
            </svg>
          </div>
        </div>

            <!-- Insights Card -->
            <div class="process-card group animate-fade-in" style="animation-delay: 400ms">
              <div class="relative z-10 bg-gradient-to-br from-sky-400 to-sky-600 rounded-2xl p-6 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:scale-105">
                <div class="flex flex-col items-center text-white">
                  <!-- Chart with Message Icon -->
                  <div class="relative w-12 h-12 mb-3">
                    <svg class="w-full h-full" fill="currentColor" viewBox="0 0 24 24">
                      <rect x="3" y="13" width="4" height="8" rx="1" />
                      <rect x="10" y="9" width="4" height="12" rx="1" />
                      <rect x="17" y="5" width="4" height="16" rx="1" />
                      <circle cx="19" cy="3" r="3" fill="currentColor" opacity="0.8" />
                      <path d="M18 2.5h2v2h-2z" fill="white" />
                    </svg>
                  </div>
                  <h3 class="text-lg font-bold font-display text-white">Insights</h3>
                </div>
              </div>
            </div>
          </div>

        </div>
      </div>
  </Container>
</section>

<style>
  .process-card {
    @apply relative;
  }
  
  /* Animated gradient background effect */
  .process-card > div::before {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: 1rem;
    padding: 2px;
    background: linear-gradient(45deg, transparent, rgba(255,255,255,0.3), transparent);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.5s;
  }
  
  .process-card:hover > div::before {
    opacity: 1;
    animation: rotate 3s linear infinite;
  }
  
  @keyframes rotate {
    to {
      transform: rotate(360deg);
    }
  }
  
  /* Animation delays */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fade-in {
    animation: fadeIn 0.6s ease-out forwards;
  }
</style>